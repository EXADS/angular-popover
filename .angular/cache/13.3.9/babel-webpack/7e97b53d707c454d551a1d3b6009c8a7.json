{"ast":null,"code":"import { ElementRef, EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\n\nfunction ThemePickerComponent_button_1_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"check_circle\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ThemePickerComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ThemePickerComponent_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.theme = item_r1.className;\n    })(\"focus\", function ThemePickerComponent_button_1_Template_button_focus_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.hovering = item_r1.className;\n    })(\"mouseenter\", function ThemePickerComponent_button_1_Template_button_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.hovering = item_r1.className;\n    })(\"mouseleave\", function ThemePickerComponent_button_1_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.hovering = null;\n    });\n    i0.ɵɵtemplate(1, ThemePickerComponent_button_1_mat_icon_1_Template, 2, 0, \"mat-icon\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"current\", ctx_r0.theme === item_r1.className)(\"hover\", ctx_r0.hovering !== null);\n    i0.ɵɵproperty(\"ngStyle\", item_r1.styles);\n    i0.ɵɵattribute(\"cdkFocusInitial\", ctx_r0.theme === item_r1.className || null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.theme === item_r1.className);\n  }\n}\n\nexport let ThemePickerComponent = /*#__PURE__*/(() => {\n  class ThemePickerComponent {\n    constructor() {\n      this.hovering = null;\n      this.elevation = true;\n      this.items = [{\n        className: 'pink-grey-theme',\n        styles: {\n          'background-color': '#e91e63',\n          'background': '-webkit-linear-gradient(-45deg, #e91e63 0%, #e91e63 50%, #bdbdbd 51%, #bdbdbd 100%)'\n        }\n      }, {\n        className: 'deeppurple-amber-theme',\n        styles: {\n          'background-color': '#673ab7',\n          'background': '-webkit-linear-gradient(-45deg, #673ab7 0%, #673ab7 50%, #ffc107 51%, #ffc107 100%)'\n        }\n      }, {\n        className: 'indigo-grey-theme',\n        styles: {\n          'background-color': '#3f51b5',\n          'background': '-webkit-linear-gradient(-45deg, #3f51b5 0%, #3f51b5 50%, #9e9e9e 51%, #9e9e9e 100%)'\n        }\n      }];\n      /*\n      {\n      className: '',\n      styles: {\n        'background-color': '#f44336'\n      }\n      },\n      {\n      className: 'purple-green-theme',\n      styles: {\n        'background-color': '#2196f3'\n      }\n      },\n      {\n      className: 'candy-app-theme',\n      styles: {\n        'background-color': '#ff5722'\n      }\n      }\n      */\n\n      this.themeValue = '';\n      this.themeChange = new EventEmitter();\n    }\n\n    get theme() {\n      return this.themeValue;\n    }\n\n    set theme(val) {\n      this.themeValue = val;\n      this.themeChange.emit(this.themeValue);\n    }\n\n    ngOnInit() {}\n\n    onItemKeydown(event, className = null) {\n      const next = new ElementRef(event.nextSibling);\n\n      if (event.keyCode === 9) {\n        console.log('onItemKeydown', event);\n        this.hovering = className;\n      }\n    }\n\n  }\n\n  ThemePickerComponent.ɵfac = function ThemePickerComponent_Factory(t) {\n    return new (t || ThemePickerComponent)();\n  };\n\n  ThemePickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ThemePickerComponent,\n    selectors: [[\"theme-picker\"]],\n    hostVars: 2,\n    hostBindings: function ThemePickerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-elevation-z4\", ctx.elevation);\n      }\n    },\n    inputs: {\n      theme: \"theme\"\n    },\n    outputs: {\n      themeChange: \"themeChange\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"container\", 3, \"keydown\"], [\"mat-button\", \"\", \"class\", \"item\", 3, \"ngStyle\", \"current\", \"hover\", \"click\", \"focus\", \"mouseenter\", \"mouseleave\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 1, \"item\", 3, \"ngStyle\", \"click\", \"focus\", \"mouseenter\", \"mouseleave\"], [4, \"ngIf\"]],\n    template: function ThemePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"keydown\", function ThemePickerComponent_Template_div_keydown_0_listener($event) {\n          return ctx.onItemKeydown($event);\n        });\n        i0.ɵɵtemplate(1, ThemePickerComponent_button_1_Template, 2, 7, \"button\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [i1.NgForOf, i2.MatButton, i1.NgStyle, i1.NgIf, i3.MatIcon],\n    styles: [\"[_nghost-%COMP%]{display:flex;background:#e5e5e5;flex-wrap:wrap;max-width:240px;height:80px;width:240px;border:4px solid #FFFFFF}.container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;width:100%}.item[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex:1 1 auto;width:80px;min-width:80px;min-height:80px;max-width:80px;max-height:80px;height:80px;border:4px solid #FFFFFF;box-sizing:border-box;cursor:pointer;color:#fff}.item.hover[_ngcontent-%COMP%]:not(:hover){opacity:.5}.item[_ngcontent-%COMP%]:focus{opacity:1!important}.item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:16pt}\"]\n  });\n  return ThemePickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}